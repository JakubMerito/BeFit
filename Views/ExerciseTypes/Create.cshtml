@model BeFit.Models.ExerciseType

@{
    ViewData["Title"] = "Dodaj nowe ćwiczenie";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-6">

        @if (!ViewData.ModelState.IsValid)
        {
        <div class="alert alert-danger">
            <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
            </ul>
        </div>
        }

        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="mb-3">
                <label asp-for="Name" class="form-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Category" class="form-label"></label>
                <input asp-for="Category" class="form-control" />
                <span asp-validation-for="Category" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Description" class="form-label"></label>
                <textarea asp-for="Description" class="form-control" rows="4"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary">Zapisz</button>
            <a asp-action="Index" class="btn btn-secondary">Anuluj</a>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
