@model BeFit.Models.TrainingSession

@{
    ViewData["Title"] = "Nowa Sesja Treningowa";
}

<h1>@ViewData["Title"]</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label asp-for="StartTime" class="control-label"></label>
        <input asp-for="StartTime" class="form-control" type="datetime-local" />
        <span asp-validation-for="StartTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EndTime" class="control-label"></label>
        <input asp-for="EndTime" class="form-control" type="datetime-local" />
        <span asp-validation-for="EndTime" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Notes" class="control-label"></label>
        <textarea asp-for="Notes" class="form-control" rows="4"></textarea>
        <span asp-validation-for="Notes" class="text-danger"></span>
    </div>

    <input type="hidden" asp-for="UserId" />

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Zapisz sesję treningową</button>
    </div>
</form>

<a href="@Url.Action("Index")" class="btn btn-secondary">Powrót do listy sesji</a>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
